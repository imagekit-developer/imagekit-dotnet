name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published
env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  GITHUB_FEED: https://nuget.pkg.github.com/cloudmeteor/index.json
  GITHUB_USER: cloudmeteor
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_APIKEY }}
  ATTRIBUTE_NAME: nupkg
  NUGET_OUTPUT_PATH: nuget-package
  Solution_Name: Imagekit.sln
  
jobs:
  build:
    name: Build and test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            2.1.x
            3.1.x
            5.0.x
            6.0.x
      - name: Build Release
        run: dotnet build Imagekit.sln -c Release /p:ContinuousIntegrationBuild=true    

       # run: dotnet test --no-build Imagekit.UnitTests/Imagekit.UnitTests.csproj -c Release
      - name: Run test suite
        run: dotnet test Imagekit.UnitTests/Imagekit.UnitTests.csproj --verbosity minimal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./Imagekit.UnitTests/coverage.net6.0.opencover.xml

      - name: Pack
        run: dotnet pack Imagekit.sln -c Release --no-build --output ${{ env.NUGET_OUTPUT_PATH }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ATTRIBUTE_NAME }}
          path: ${{ env.NUGET_OUTPUT_PATH }}
            
  Publish:
    needs: build
    if: (github.event_name == 'release') || (github.ref == 'refs/tags/*')
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ATTRIBUTE_NAME }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Publish NuGet packages to NuGet
        run: dotnet nuget push "*.nupkg" -k ${{ secrets.NUGET_APIKEY }} --source ${{ env.NUGET_FEED }} --no-symbols true --skip-duplicate
