name: CI Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  GITHUB_FEED: https://nuget.pkg.github.com/cloudmeteor/index.json
  GITHUB_USER: cloudmeteor
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_APIKEY }}
  ATTRIBUTE_NAME: nupkg
  NUGET_OUTPUT_PATH: nuget-package
  Solution_Name: Imagekit.sln

jobs:
  Build:
    runs-on: windows-latest 
    
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: |
            2.1.x
            3.1.x
            5.0.x
            6.0.x
      - name: Install tools
        run: |
          dotnet tool restore

      - name: Build the SDK
        run: dotnet build $env:Solution_Name --configuration Release --no-restore
        
      - name: Run test suite
        run: dotnet test --no-build /Imagekit.UnitTests/Imagekit.UnitTests.csproj -c Release      
        
      - name: Copy Coverage To Predictable Location
        run: cp coverage/**/coverage.cobertura.xml coverage.cobertura.xml
    
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Pack 
        run: dotnet pack --configuration Release --no-build --include-source --verbosity minimal --output ${{ env.NUGET_OUTPUT_PATH }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ATTRIBUTE_NAME }}
          path: ${{ env.NUGET_OUTPUT_PATH }}

      - name: Notify Slack on failure
        if: ${{ failure() }}
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: Content verification has failed.
          author_name: Content Verification
          fields: message,author,action,eventName,ref,workflow
          username: GitHub Actions
          icon_emoji: ":github_actions:"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DOCS_CHANNEL_WEBHOOK }}
      
      
  Publish:
    needs: Build
    if: (github.event_name == 'release') || (github.ref == 'refs/tags/*')
    runs-on: windows-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ATTRIBUTE_NAME }}

      - name: .NET Core Version
        run: dotnet --version

      - name: .NET Core Info
        run: dotnet --info

      - name: Nuget push
        run: dotnet nuget push "*.nupkg" -k ${{ secrets.NUGET_APIKEY }} --source ${{ env.NUGET_FEED }} --no-symbols true --skip-duplicate
